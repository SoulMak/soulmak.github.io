{"name":"Windows下搭建CA","tagline":"2014年9月17日","body":"##前言\r\n\r\n本文技术来源于《Java加密与解密的艺术》一书，对于本文看的不是很明白的可以查阅该书\r\n\r\n##准备\r\n\r\n在<http://slproweb.com/products/Win32OpenSSL.html>页面下下载最新的Windows版OpenSSL。这里选用`Win64 OpenSSL v1.0.1i Light`演示数字证书构建相关操作\r\n\r\n###环境变量\r\n\r\n设置系统变量`OpenSSL_Home`，并将其指向你的安装目录(`C:\\OpenSSL`)。同时设置其执行目录(`%OpenSSL_Home%\\bin;`)加入系统变量`Path`中。如下：\r\n\r\n\t＃OpenSSL系统变量配置\r\n\t\r\n\tOpenSSL_Home\tC:\\OpenSSL\r\n\tPath\t\t\t%OpenSSL_Home%\\bin\r\n\r\n完成上述操作后，在命令行执行`OpenSSL`命令，如下：\r\n\t\r\n\t＃OpenSSL命令行操作\r\n\t\r\n\tC:\\User\\itan.feng>openssl\r\n\tOpenSSL>_\r\n\t\r\n###工作目录\r\n\r\n大家OpenSSL配置文件openssl.cfg(`%OpenSSL_Home%\\bin\\opensssl.cfg`)，找到配置`[CA_default]`，如下：\r\n\t\r\n\t＃OpenSSL初始配置\r\n\t\r\n\t####################################################################\r\n\t[ CA_default ]\r\n\t\r\n\tdir\t\t        = ./demoCA         # Where everything is kept\r\n\tcerts\t\t    = $dir/certs       # Where the issued certs are kept\r\n\tcrl_dir\t\t    = $dir/crl         # Where the issued crl are kept\r\n\tdatabase\t    = $dir/index.txt   # database index file.\r\n\t#unique_subject\t= no               # Set to 'no' to allow creation of\r\n\t\t\t\t\t                   # several ctificates with same subject.\r\n\tnew_certs_dir\t= $dir/newcerts    # default place for new certs.\r\n\r\n\tcertificate\t    = $dir/cacert.pem  # The CA certificate\r\n\r\n注意变量`dir`，它指向的是CA的工作目录，本文将路径指向`C:/ca`作为工作目录，对变量dir做相应的修改。对于其他变量，我们无需修改。  \r\n如果不方便修改OpenSSL默认配置文件，可以通过设置变量`“OPENSSL_CONF”`指定配置文件路径。如下：\r\n\r\n\t＃命令指定配置文件路径\r\n\t\r\n\tset\tOPENSSL_CONF = C:\\openssl.cfg\r\n\t\r\n若该方法无法设置成功请自己到系统变量中进行设置\r\n\r\n\t＃系统变量自定配置文件路径\r\n\t\r\n\tOPENSSL_CONF = C:\\openssl.cfg\r\n\t\r\n建立CA工作目录后，我们需要构建一些子目录，用于存放证书、密钥等。完整命令代码清单如下：\r\n\r\n\t＃构建CA子目录\r\n\t\r\n\techo  构建已发行证书存放目录  certs\r\n\tmkdir certs\r\n\techo  构建新证书存放目录 newcerts\r\n\tmkdir newcerts\r\n\techo  构建私钥存放目录  private\r\n\tmkdir private\r\n\techo  构建证书吊销列表存放目录 crl\r\n\tmkdir crl\r\n\t\r\n我们将在创建证书时用到上述目录，最终在certs目录中获得证书文件。  \r\n接下来我们需要构建一些文件，完整命令代码清单如下：\r\n\r\n\t＃构建相关文件\r\n\t\r\n\techo  构建索引文件 index.txt\r\n\techo  0>index.txt\r\n\techo  构建序列号文件 serial\r\n\techo  01>serial\r\n\t\r\n完成上述操作后，我们就可以进行证书的构建和签发工作了。\r\n\r\n##构建根证书\r\n\r\n###构建随机数文件\r\n\r\n在构根证书之前，需要构建随机数文件（`.rand`），完整命令代码清单如下：\r\n\r\n\t＃构建随机数命令\r\n\t\r\n\topenssl rand -out private/.rand 1000\r\n\t\r\n各参数的含义如下：  \r\nrand     随机数命令  \r\n-out     输出文件路径，这里将随机数文件输出到private目录下。  \r\n这里的1000，只用来产生伪随机字节数。  \r\n上述命令执行结果如下\r\n\r\n\t＃构建随机数文件\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\r\n注意如果在windows7中未能使用管理员权限执行上述命令，将无法创建随机数文件，如下\r\n\t\r\n\t＃构建随机数文件失败\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tunable to write 'random state'\r\n\r\n### 生成 CA 证书的 RSA 密钥对\r\n\r\nOpenSSL通常使用PEM（Privacy Enbanced Mail，隐私增强邮件）编码格式保存私钥。  \r\n接下来，我们需要构建根证书密钥（`ca.key.pem`），完整命令代码清单如下：\r\n\r\n\t＃构建根证书私钥命令\r\n\t\r\n\topenssl genrsa -aes256 -out private/ca.key.pem 2048\r\n\t\r\n各参数的含义如下：  \r\n\r\n\tgenrsa\t\t产生RSA密钥命令\r\n\t-aes256\t\t使用AES算法（256位密钥）对产生的私钥加密。可选算法包括DES、DESede、IDEA和AES。\r\n\t-out\t\t输出路径，这里指private/ca.key.pem。\r\n这里的2048，指密钥长度位数，默认长度为512为。  \r\n上述命令执行结果如下：\r\n\r\n\t＃构建根证书私钥\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tGenerating RSA private key, 2048 bit long modulus\r\n\t.....................................+++\r\n\t...+++\r\n\te is 65537 (0x10001)\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\tVerifying - Enter pass phrase for private/ca.key.pem:\r\n\r\n这时我们需要输入根证书密码`“www.aios.com”`  \r\n\r\n###生成 CA 证书请求\r\n\r\n完成密钥的构建操作后，我们需要生成根证书签发的申请文件（`ca.csr`），完整命令代码清单如下：\r\n\r\n\t＃生成根证书签发得申请命令\r\n\t\r\n\topenssl req -new -key private/ca.key.pem -out private/ca.csr\r\n\t\r\n各参数的含义如下：\r\n\t\r\n\treq\t\t产生证书签发申请命令\t\t\r\n\t-new\t产生新请求\r\n\t-key\t密钥，这里为private/ca.key.pem文件\r\n\t-out\t输出路径，这里为private/ca.csr文件\r\n\t\r\n上述命令执行结果如下：\r\n\r\n\t#生成根证书签发申请\r\n\t\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\tLoading 'screen' into random state - done\r\n\tYou are about to be asked to enter information that will be incorporated into your certificate request.\r\n\tWhat you are about to enter is what is called a Distinguished Name or a DN.\r\n\tThere are quite a few fields but you can leave some blank\r\n\tFor some fields there will be a default value,\r\n\tIf you enter '.', the field will be left blank.\r\n\t-----\r\n\tCountry Name (2 letter code) [AU]:CN\r\n\tState or Province Name (full name) [Some-State]:BJ\r\n\tLocality Name (eg, city) []:BJ\r\n\tOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Tech.Settion\r\n\tOrganizational Unit Name (eg, section) []:AIOS Inc.\r\n\tCommon Name (e.g. server FQDN or YOUR name) []:Insight RootCA\r\n\tEmail Address []:\r\n\r\n\tPlease enter the following 'extra' attributes\r\n\tto be sent with your certificate request\r\n\tA challenge password []:\r\n\tAn optional company name []:\r\n\r\n这时我们需要输入根证书密码并填写证书相关信息字段 \r\n\r\n###对 CA 证书请求进行签名\r\n\r\n得到根证书签发申请文件后，我们可以将其发送给CA机构签发。当然，我们也可以自行签发根证书。签发根证书完整命令清单如下：\r\n\r\n\t＃签发根证书命令\r\n\t\r\n\topenssl x509 -req -days 10000 -sha1 -extensions v3_ca -signkey private/ca.key.pem -in private/ca.csr -out certs/ca.cer\r\n\t\r\n各参数的含义如下：\r\n\r\n\tx509\t\t\t签发X.509格式证书命令。\r\n\t-req\t\t\t证书输入请求。\r\n\t-days\t\t\t🈶效天数，这里为10000天\r\n\t-sha1\t\t\t证书摘要算法，这里为SHA1算法\r\n\t-extensions\t\t按OpenSSL配置文件v3_ca项添加扩展\r\n\t-signkey\t\t自签名密钥，这里为private/ca.key.pem\r\n\t-in\t\t\t\t输入文件，这里为private/ca.csr\r\n\t-out\t\t\t输出文件，这里为certs/ca.csr\r\n\t\r\n上述命令执行结果，如下：\r\n\r\n\t#签发根证书\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tSignature ok\r\n\tsubject=/C=CN/ST=BJ/L=BJ/O=Tech.Settion/OU=AIOS Inc./CN=Insight RootCA\r\n\tGetting Private key\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\t\r\n这时我们需要输入根证书密码`“www.aios.com”`\r\n\r\n###对 CA证书 进行转换\r\n\r\nOpenSSL产生的数字证书不在Java语言环境中直接使用，需要将其转化为PKCS#12编码格式。完整命令代码清单如下：\r\n\r\n\t＃根证书转换命令\r\n\t\r\n\topenssl pkcs12 -export -cacerts -inkey private/ca.key.pem -in certs/ca.cer -out certs/ca.p12\r\n\t\r\n各参数的含义如下：\r\n\t\r\n\tpkcs12\t\tPKCS#12编码格式证书命令\r\n\t-export\t\t导出证书\r\n\t-cacerts\t仅导出CA证书\r\n\t-inkey\t\t输入密钥，这里为private/ca.key.pem\r\n\t-in\t\t\t输入文件，这里为certs/ca.cer\r\n\t-out\t\t输出文件，这里为certs/ca.p12\r\n\t\r\n上述命令执行结果如下：\r\n\r\n\t＃根证书转换\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\tEnter Export Password:\r\n\tVerifying - Enter Export Password:\r\n\t\r\n这时我们需要输入根证书密码`www.aios.com`\r\n\t\r\n###查看密钥库信息\r\n\r\n个人信息交换文件（PKCS#12）可以作为密钥库或信任库使用，我们可以通过KeyTool查看该密钥库的详细信息。完整的代码清单如下：\r\n\t\r\n\t＃查看密钥库信息命令\r\n\t\r\n\tkeytool -list -keystore certs/ca.p12 -storetype pkcs12 -v -storepass www.aios.com\r\n\t\r\n🚩keytool命令JDK环境下才能使用，这里的参数-storetype值为“pkcs12”\r\n\r\n##构建服务器证书\r\n\r\n服务器证书的构建与根证书构建相似\r\n\r\n###构建 服务器 私钥\r\n\t\r\n构建服务器私钥，完整代码清单如下：\r\n\r\n\t＃构建服务器私钥命令\r\n\t\r\n\topenssl genrsa -aes256 -out private/server.key.pem 2048\r\n\t\r\n各参数的含义如下：\r\n\r\n\tgenrsa\t\t产生RSA密钥命令\r\n\t-aes256\t\t使用AES算法（256位密钥）对产生的私钥加密。可选算法包括DES、DESede、IDEA和AES\r\n\t-out\t\t输出路径，这里指private/server.key.pem\r\n\t\r\n这里的参数2048，指RSA密钥长度位数，默认长度为512位\r\n上述命令执行结果，如下所示：\r\n\r\n\t＃产生服务器证书密钥\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tGenerating RSA private key, 2048 bit long modulus\r\n\t.......................................+++\r\n\t....................................................+++\r\n\te is 65537 (0x10001)\r\n\tEnter pass phrase for private/server.key.pem:\r\n\tVerifying - Enter pass phrase for private/server.key.pem:\r\n\t\r\n这时我们需要输入服务器证书密码\"`www.thtf.com`\"\r\n\r\n###生成 服务器证书 请求\r\n\r\n完成服务器证书的密钥构建后，我们需要产生服务器证书的签发申请。完整代码清单如下：\r\n\r\n\t#生成服务器证书签发申请命令\r\n\t\r\n\topenssl req -new -key private/server.key.pem -out private/server.csr\r\n\t\r\n各参数的含义如下：\r\n\r\n\treq\t\t\t生成证书签发申请命令\r\n\t-new\t\t新请求\r\n\t-key\t\t密钥，这里为private/ca.key.pem\r\n\t-out\t\t输出路径，这里为private/ca.csr文件\r\n\r\n上述命令执行结果，如下\r\n\r\n\t＃生成服务器证书签发申请\r\n\t\r\n\tEnter pass phrase for private/server.key.pem:\r\n\tLoading 'screen' into random state - done\r\n\tYou are about to be asked to enter information that will be incorporated into your certificate request.\r\n\tWhat you are about to enter is what is called a Distinguished Name or a DN.\r\n\tThere are quite a few fields but you can leave some blank\r\n\tFor some fields there will be a default value,\r\n\tIf you enter '.', the field will be left blank.\r\n\t-----\r\n\tCountry Name (2 letter code) [AU]:CN\r\n\tState or Province Name (full name) [Some-State]:BJ\r\n\tLocality Name (eg, city) []:BJ\r\n\tOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Tech.Settion\r\n\tOrganizational Unit Name (eg, section) []:AIOS Inc.\r\n\tCommon Name (e.g. server FQDN or YOUR name) []:Insight Server\r\n\tEmail Address []:\r\n\t\r\n\tPlease enter the following 'extra' attributes\r\n\tto be sent with your certificate request\r\n\tA challenge password []:\r\n\tAn optional company name []:\r\n\t\r\n这时我们需要输入服务器证书密码（“`www.thtf.com`\"）并填写服务器证书相关信息字段\r\n\r\n###签发 服务器证书\r\n\r\n我们已经获得了根证书，可以使用根证书签发服务器证书。完整代码清单如下：\r\n\r\n\t#签发服务器证书命令\r\n\t\r\n\topenssl x509 -req -days 3650 -sha1 -extensions v3_req -CA certs/ca.cer -CAkey private/ca.key.pem -CAserial ca.srl -CAcreateserial -in private/server.csr -out certs/server.cer\r\n\r\n各参数得含义如下：\r\n\r\n\tx509\t\t\t\t签发X.509格式证书命令\r\n\t-req\t\t\t\t证书输入请求\r\n\t-days\t\t\t\t有效天数，这里为3650天\r\n\t-sha1\t\t\t\t证书摘要算法，这里为SHA1算法\r\n\t-extensions\t\t\t按OpenSSL配置文件v3_req项添加扩展\r\n\t-CA\t\t\t\t\tCA证书，这里为certs/ca.cer\r\n\t-CAkey\t\t\t\tCA证书密钥，这里为private/ca.key.pem\r\n\t-CAserial\t\t\tCA证书序列号文件，这里为ca.srl\r\n\t-CAcreateserial\t\t创建CA证书序列号\r\n\t-in\t\t\t\t\t输入文件，这里为private/server.csr\r\n\t-out\t\t\t\t输出文件，这里为certs/server.cer\r\n\t\r\n上述命令执行结果，如下：\r\n\r\n\t＃签发服务器证书\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tSignature ok\r\n\tsubject=/C=CN/ST=BJ/L=BJ/O=Tech.Settion/OU=AIOS Inc./CN=Insight Server\r\n\tGetting CA Private Key\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\t\r\n这时我们需要输入服务器证书密码\"`www.thtf.com`\"\r\n\r\n###对 服务器证书 进行转换\r\n\r\n这里我们同样要将OpenSSL产生得数字证书转化为PKCS#12编码格式。完整命令代码如下：\r\n\r\n\t#服务器证书转换命令\r\n\t\r\n\topenssl pkcs12 -export -clcerts -inkey private/server.key.pem -in certs/server.cer -out certs/server.p12\r\n\t\r\n各参数得\r\n\t\r\n\tpkcs12\t\tPKCS#12编码格式证书命令\t\r\n\t-export\t\t导出证书\r\n\t-clcerts\t仅导出客户证书\r\n\t-inkey\t\t输入密钥路径\r\n\t-in\t\t\t输入文件路径\r\n\t-out\t\t输出文件路径，这里为certs/server.p12\r\n\t\r\n上述命令执行结果如下\r\n\r\n\t＃服务器转换证书\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tEnter pass phrase for private/server.key.pem:\r\n\tEnter Export Password:\r\n\tVerifying - Enter Export Password:\r\n\r\n我们需要输入服务器证书密码\"`www.thtf.com`\"\r\n\r\n##构建客户证书\r\n\r\n客户证书的构建与服务器证书得构建基本一致\r\n\r\n###构建 客户 私钥\r\n\r\n构建客户私钥，完整代码如下：\r\n\r\n\t＃产生客户私钥命令\r\n\t\r\n\topenssl genrsa -aes256 -out private/800010000010007.key.pem 2048\r\n\t\r\n各参数得含义如下：\r\n\r\n\tgenrsa\t\t产生RSA密钥命令\r\n\t-aes256\t\t使用AES算法（256位密钥）对产生得私钥加密。可选算法包括DES、DESede、IDEA和AES。\r\n\t-out\t\t输出路径，这里指private/800010000010007.key.pem 2048\r\n\t\r\n这里得参数2048，指RSA密钥长度位数，默认长度为512位  \r\n上述命令执行结果如下：\r\n\t\r\n\t＃产生客户密钥\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tGenerating RSA private key, 2048 bit long modulus\r\n\t..........................+++\r\n\t....................+++\r\n\te is 65537 (0x10001)\r\n\tEnter pass phrase for private/800010000010007.key.pem:\r\n\tVerifying - Enter pass phrase for private/800010000010007.key.pem:\r\n\r\n这时我们需要输入客户证书得密码“`www.test.com`”\r\n\r\n###生成 客户证书 请求\r\n\r\n完成客户证书密钥构建后，我们需要产生客户证书签发申请。完整代码如下：\r\n\r\n\t＃生成客户证书签发申请命令\r\n\t\r\n\topenssl\treq -new -key private/800010000010007.key.pem -out private/800010000010007.csr\r\n\t\r\n各参数得含义如下：\r\n\r\n\treq\t\t\t产生证书签发申请命令\r\n\t-new\t\t新请求\r\n\t-key\t\t密钥，这里为private/800010000010007.key.pem\r\n\t-out\t\t输出路径，这里为private/800010000010007.csr\r\n\t\r\n上述命令执行结果如下：\r\n\t\r\n\t＃生成客户证书签发申请\r\n\t\r\n\tEnter pass phrase for private/800010000010007.key.pem:\r\n\tLoading 'screen' into random state - done\r\n\tYou are about to be asked to enter information that will be incorporated into your certificate request.\r\n\tWhat you are about to enter is what is called a Distinguished Name or a DN.\r\n\tThere are quite a few fields but you can leave some blank\r\n\tFor some fields there will be a default value,\r\n\tIf you enter '.', the field will be left blank.\r\n\t-----\r\n\tCountry Name (2 letter code) [AU]:CN\r\n\tState or Province Name (full name) [Some-State]:BJ\r\n\tLocality Name (eg, city) []:BJ\r\n\tOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Tech.Settion\r\n\tOrganizational Unit Name (eg, section) []:Test Merchant\r\n\tCommon Name (e.g. server FQDN or YOUR name) []:800010000010007\r\n\tEmail Address []:\r\n\r\n\tPlease enter the following 'extra' attributes\r\n\tto be sent with your certificate request\r\n\tA challenge password []:\r\n\tAn optional company name []:\r\n\r\n这时我们需要输入客户证书得密码“`www.test.com`”和客户相关信息\r\n\r\n###签发 客户证书\r\n\r\n我们已经获得了根证书，可以使用根证书签发客户证书（`800010000010007.cer`）。完整代码清单如下：\r\n\t\r\n\t＃签发客户证书命令\r\n\t\r\n\topenssl ca -days 3650 -in private/800010000010007.csr -out certs/800010000010007.cer -cert certs/ca.cer -keyfile private/ca.key.pem\r\n\t\r\n各参数得含义如下：\r\n\r\n\tca\t\t\t签发证书命令\r\n\t-days\t\t证书有效期，这里为3650天\r\n\t-in\t\t\t输入文件，这里为private/800010000010007.csr\r\n\t-out\t\t输出文件，这里为certs/800010000010007.cer\r\n\t-cert\t\t证书文件，这里为certs/ca.cer\r\n\t-keyfile\t根证书密钥文件，这里为private/ca.key.pem\r\n\t\r\n上述命令执行结果，如下：\r\n\r\n\t＃签发客户证书\r\n\t\r\n\tUsing configuration from C:\\OpenSSL-Win64\\bin\\openssl.cfg\r\n\tLoading 'screen' into random state - done\r\n\tEnter pass phrase for private/ca.key.pem:\r\n\tCheck that the request matches the signature\r\n\tSignature ok\r\n\tCertificate Details:\r\n\t        Serial Number: 1 (0x1)\r\n\t        Validity\r\n\t            Not Before: Sep 17 08:17:33 2014 GMT\r\n\t            Not After : Sep 14 08:17:33 2024 GMT\r\n\t        Subject:\r\n\t            countryName               = CN\r\n\t            stateOrProvinceName       = BJ\r\n\t            organizationName          = Tech.Settion\r\n\t            organizationalUnitName    = Test Merchant\r\n\t            commonName                = 800010000010007\r\n\t        X509v3 extensions:\r\n\t            X509v3 Basic Constraints:\r\n\t                CA:FALSE\r\n\t            Netscape Comment:\r\n\t                OpenSSL Generated Certificate\r\n\t            X509v3 Subject Key Identifier:\r\n\t                24:8B:78:66:97:35:0C:B2:A7:F3:EE:21:C2:94:AA:84:32:EC:3D:B8\r\n\t            X509v3 Authority Key Identifier:\r\n\t                DirName:/C=CN/ST=BJ/L=BJ/O=Tech.Settion/OU=AIOS Inc./CN=Insight RootCA\r\n\t                serial:FC:34:82:77:F4:3F:54:26\r\n\r\n\tCertificate is to be certified until Sep 14 08:17:33 2024 GMT (3650 days)\r\n\tSign the certificate? [y/n]:y\r\n\r\n\r\n\t1 out of 1 certificate requests certified, commit? [y/n]y\r\n\tWrite out database with 1 new entries\r\n\tData Base Updated\r\n\t\r\n这时我们需要输入客户证书密码“`www.test.com`”,并同意签发证书\r\n\r\n###对 客户证书 进行转换\r\n\r\n最后我们需要将获得的客户证书转化Java语言可以识别得PKCS#12编码格式。完整命令如下\r\n\t\r\n\t＃客户证书转换命令\r\n\t\r\n\topenssl pkcs12 -export -clcerts -inkey private/800010000010007.key.pem -in certs/800010000010007.cer -out certs/800010000010007.p12\r\n\t\r\n各参数得含义如下\r\n\r\n\tpkcs12\t\t\tPKCS#12编码格式证书命令\r\n\t-export\t\t\t导出证书\r\n\t-clcerts\t\t仅导出客户证书\r\n\t-inkey\t\t\t输入密钥，这里为private/800010000010007.key.pem\r\n\t-in\t\t\t\t输入文件，这里为certs/800010000010007.cer\r\n\t-out\t\t\t输出文件，这里为certs/800010000010007.p12\r\n\t\r\n上述命令执行结果如下：\r\n\r\n\t＃客户证书转换\r\n\t\r\n\tLoading 'screen' into random state - done\r\n\tEnter pass phrase for private/800010000010007.key.pem:\r\n\tEnter Export Password:\r\n\tVerifying - Enter Export Password:\r\n\r\n这时我们需要输入客户证书密码“`www.test.com`”  \r\n至此，我们完成了双向认证得所需全部证书。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}